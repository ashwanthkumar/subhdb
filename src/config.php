<?php	// Global Configuration for the SubhDB framework		// MySQL connection setting goes here	$db_host = "localhost";	$db_user = "root";	$db_pass = "";		$db_name = "subhdb";			// Define the PDO object as global. May be someone knows a better way? 	$db = new db("mysql:host=$db_host;dbname=$db_name", "$db_user", "$db_pass");	$db->setErrorCallbackFunction("showErrorByDB", "text");		$base_uri = $_SERVER['SCRIPT_NAME'];	// Utility functions 		/**	 *	Just emit the $mixed as a JSON	 *	 *	@param $mixed array to be emitted as a JSON	 **/	function emit($mixed) {		header("Content-type: application/json");		echo json_encode($mixed);	}		/**	 *	Utility function to catch the error caused by the PDO driver	 *	 *	@param $error Error message that is generated by the driver	 **/	function showErrorByDB($error) {		echo $error;		die();	}	/**	 *	Build a JSON Object from the @documentAttributes passed as a result of $db->run	 *	used generally in GET method	 *	 *	@param $documentAttributes value from $db->run	 **/	function buildJSONObject($documentAttributes) {		$jsonObject = new stdClass;		foreach($documentAttributes as $a) {			$jsonObject-> $a["name"] = $a["value"];		}		return json_encode($jsonObject);	}		/**	 *	Adds the keys of the decoded json string to the datastore	 *	 *	@param $jsonVars JSON string decoded with get_object_vars()	 **/	function addKeysToIndex($jsonVars, $docId, $parentId = -1) {		global $db;	// Getting the global instance of the PDO object created in this file				while($var = current($jsonVars)) {			// Checking if the key for the variable exist already			$k = $db->select("`keys`", "name = :name", array(":name" => key($jsonVars)));			$keyRef = -1;			// echo key($vars) . " - " . count($k) . "\n";			if(count($k) > 0) {					// Key exist, just get its PK				$keyRef = $k[0]["idkeys"];			} else {				// Key does not exist, add it as a reference and get its PK				$db->insert("`keys`", array("name" => key($jsonVars)));				$keyRef = $db->lastInsertId();			}			// Checking to add them recursively			if(is_array($var)) {				$db->insert("attributes", array("value" => "ContainsCollection", "key_id" => $keyRef, "doc_id" => $docId, "parent_id" => $parentId));				$attributeId = $db->lastInsertId();								addKeysToIndex($var, $docId, $attributeId);			} else {				$db->insert("attributes", array("value" => $var, "key_id" => $keyRef, "doc_id" => $docId, "parent_id" => $parentId));			}			next($jsonVars);		}	}